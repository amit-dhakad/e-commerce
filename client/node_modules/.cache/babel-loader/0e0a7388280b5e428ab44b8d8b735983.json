{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.util';\nimport { FETCH_COLLECTIONS_START } from '../types';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/HI/Desktop/projects/e-commerce/client/src/redux/shop/shop.sagas.js"],"names":["all","call","put","takeLatest","convertCollectionsSnapshotToMap","firestore","FETCH_COLLECTIONS_START","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","shopSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,8BAHP;AAIA,SAASC,uBAAT,QAAwC,UAAxC;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAhC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,aAAD,CAAxB,CAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,UAAU,CAACG,uBAAD,EAA0BG,qBAA1B,CAAhB;AACD;AAED,OAAO,UAAUS,QAAV,GAAqB;AAC1B,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  convertCollectionsSnapshotToMap,\r\n  firestore,\r\n} from '../../firebase/firebase.util';\r\nimport { FETCH_COLLECTIONS_START } from '../types';\r\nimport {\r\n  fetchCollectionsFailure,\r\n  fetchCollectionsSuccess,\r\n} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n    yield put(fetchCollectionsSuccess(collectionMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}\r\n\r\nexport function* shopSaga() {\r\n  yield all([call(fetchCollectionsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}