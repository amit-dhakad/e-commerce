{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from '../../firebase/firebase.util';\nimport { CHECK_USER_SESSION, EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START, SIGN_OUT_START } from '../types';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_OUT_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/HI/Desktop/projects/e-commerce/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","auth","createUserProfileDocument","getCurrentUser","googleProvider","CHECK_USER_SESSION","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","SIGN_OUT_START","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signOut","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","additionalData","signInWithGoogle","signInWithPopup","isUserAuthenticated","onGoogleSignInStart","signInWithEmail","signInWithEmailAndPassword","onEmailSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,8BALP;AAMA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,cAJF,QAKO,UALP;AAMA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,aANF,QAOO,gBAPP;AASA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMnB,IAAI,CAACI,yBAAD,EAA4Bc,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMpB,GAAG,CAACW,aAAa,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACU,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,OAAV,GAAoB;AACzB,MAAI;AACF,UAAMtB,IAAI,CAACsB,OAAL,EAAN;AACA,UAAMxB,GAAG,CAACa,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOU,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACY,cAAc,CAACW,KAAD,CAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUE,MAAV,CAAiB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB;AAAX,CAAjB,EAAgE;AACrE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM5B,IAAI,CAAC6B,8BAAL,CAAoCJ,KAApC,EAA2CC,QAA3C,CAAvB;AACA,UAAM5B,GAAG,CAACe,aAAa,CAAC;AAAEe,MAAAA,IAAF;AAAQE,MAAAA,cAAc,EAAE;AAAEH,QAAAA;AAAF;AAAxB,KAAD,CAAd,CAAT;AACD,GAHD,CAGE,OAAON,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACc,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUU,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAM5B,IAAI,CAACgC,eAAL,CAAqB7B,cAArB,CAAvB;AACA,UAAMW,uBAAuB,CAACc,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACU,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUY,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMlB,QAAQ,GAAG,MAAMb,cAAc,EAArC;AACA,QAAI,CAACa,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACU,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUa,mBAAV,GAAgC;AACrC,QAAMnC,UAAU,CAACO,oBAAD,EAAuByB,gBAAvB,CAAhB;AACD;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEX,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAM5B,IAAI,CAACoC,0BAAL,CAAgCX,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMZ,uBAAuB,CAACc,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACU,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACpC,QAAMtC,UAAU,CAACM,mBAAD,EAAsB8B,eAAtB,CAAhB;AACD;AAED,OAAO,UAAUG,kBAAV,GAA+B;AACpC,QAAMvC,UAAU,CAACK,kBAAD,EAAqB6B,mBAArB,CAAhB;AACD;AAED,OAAO,UAAUM,cAAV,GAA2B;AAChC,QAAMxC,UAAU,CAACQ,cAAD,EAAiBe,OAAjB,CAAhB;AACD;AAED,OAAO,UAAUkB,aAAV,GAA0B;AAC/B,QAAMzC,UAAU,CAACQ,cAAD,EAAiBgB,MAAjB,CAAhB;AACD;AAED,OAAO,UAAUkB,SAAV,GAAsB;AAC3B,QAAM7C,GAAG,CAAC,CACRC,IAAI,CAACqC,mBAAD,CADI,EAERrC,IAAI,CAACwC,kBAAD,CAFI,EAGRxC,IAAI,CAACoC,mBAAD,CAHI,EAIRpC,IAAI,CAAC0C,cAAD,CAJI,CAAD,CAAT;AAMD","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n  googleProvider,\r\n} from '../../firebase/firebase.util';\r\nimport {\r\n  CHECK_USER_SESSION,\r\n  EMAIL_SIGN_IN_START,\r\n  GOOGLE_SIGN_IN_START,\r\n  SIGN_OUT_START,\r\n} from '../types';\r\nimport {\r\n  signInFailure,\r\n  signInSuccess,\r\n  signOutFailure,\r\n  signOutSuccess,\r\n  signUpFailure,\r\n  signUpSuccess,\r\n} from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n  } catch (error) {\r\n    yield put(signUpFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(SIGN_OUT_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(isUserAuthenticated),\r\n    call(onSignOutStart),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}