{"ast":null,"code":"import { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.util';\nimport { FETCH_COLLECTIONS_FAILURE, FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS } from '../types';\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/HI/Desktop/projects/e-commerce/client/src/redux/shop/shop.actions.js"],"names":["convertCollectionsSnapshotToMap","firestore","FETCH_COLLECTIONS_FAILURE","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","catch","error","message"],"mappings":"AAAA,SACEA,+BADF,EAEEC,SAFF,QAGO,8BAHP;AAIA,SACEC,yBADF,EAEEC,uBAFF,EAGEC,yBAHF,QAIO,UAJP;AAMA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEH;AADoC,CAAP,CAA9B;AAIP,OAAO,MAAMI,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DF,EAAAA,IAAI,EAAEF,yBADoD;AAE1DK,EAAAA,OAAO,EAAED;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAME,uBAAuB,GAAIC,YAAD,KAAmB;AACxDL,EAAAA,IAAI,EAAEJ,yBADkD;AAExDO,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,aAAa,GAAGnB,+BAA+B,CAACkB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACY,aAAD,CAAxB,CAAR;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAWR,QAAQ,CAACH,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import {\r\n  convertCollectionsSnapshotToMap,\r\n  firestore,\r\n} from '../../firebase/firebase.util';\r\nimport {\r\n  FETCH_COLLECTIONS_FAILURE,\r\n  FETCH_COLLECTIONS_START,\r\n  FETCH_COLLECTIONS_SUCCESS,\r\n} from '../types';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n  type: FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n  type: FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionMap));\r\n      })\r\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}